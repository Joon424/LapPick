<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mini.mapper.GoodsMapper">

    <resultMap id="goodsResultMap" type="mini.domain.GoodsDTO">
        <id property="goodsNum" column="GOODS_NUM" />
        <result property="goodsName" column="GOODS_NAME" />
        <result property="goodsPrice" column="GOODS_PRICE" />
        <result property="goodsContents" column="GOODS_CONTENTS" />
        <result property="goodsBrand" column="GOODS_BRAND" />
        <result property="goodsPurpose" column="GOODS_PURPOSE" />
        <result property="goodsScreenSize" column="GOODS_SCREEN_SIZE" />
        <result property="goodsWeight" column="GOODS_WEIGHT" />
        <result property="goodsKeyword1" column="GOODS_KEYWORD1" />
        <result property="goodsKeyword2" column="GOODS_KEYWORD2" />
        <result property="goodsKeyword3" column="GOODS_KEYWORD3" />
        <result property="goodsShippingInfo" column="GOODS_SHIPPING_INFO" />
        <result property="goodsSellerInfo" column="GOODS_SELLER_INFO" />
        <result property="empNum" column="EMP_NUM" />
        <result property="goodsDate" column="GOODS_DATE" />
        <result property="goodsMainImage" column="GOODS_MAIN_IMAGE" />
        <result property="goodsMainStoreImage" column="GOODS_MAIN_STORE_IMAGE" />
        <result property="goodsDetailImage" column="GOODS_DETAIL_IMAGE" />
        <result property="goodsDetailStoreImage" column="GOODS_DETAIL_STORE_IMAGE" />
        <result property="goodsDetail" column="GOODS_DETAIL" />
        <result property="goodsDetailStore" column="GOODS_DETAIL_STORE" />
        <result property="updateEmpNum" column="UPDATE_EMP_NUM" />
        <result property="updateDate" column="UPDATE_DATE" />
    </resultMap>
    
    <resultMap id="goodsStockResultMap" type="mini.domain.GoodsStockDTO" extends="goodsResultMap">
        <result property="stockQty" column="STOCK_QTY" />
    </resultMap>

    <sql id="goodsColumns">
        GOODS_NUM, GOODS_NAME, GOODS_PRICE, GOODS_CONTENTS, GOODS_BRAND, GOODS_PURPOSE,
        GOODS_SCREEN_SIZE, GOODS_WEIGHT, GOODS_KEYWORD1, GOODS_KEYWORD2, GOODS_KEYWORD3,
        GOODS_SHIPPING_INFO, GOODS_SELLER_INFO, EMP_NUM, GOODS_DATE,
        GOODS_MAIN_IMAGE, GOODS_MAIN_STORE_IMAGE,
        GOODS_DETAIL_IMAGE, GOODS_DETAIL_STORE_IMAGE,
        GOODS_DETAIL, GOODS_DETAIL_STORE,
        UPDATE_EMP_NUM, UPDATE_DATE
    </sql>

    <sql id="filterConditions">
        <where>
            <if test="searchWord != null and searchWord != ''">(UPPER(GOODS_NAME) LIKE '%' || UPPER(#{searchWord}) || '%' OR UPPER(GOODS_CONTENTS) LIKE '%' || UPPER(#{searchWord}) || '%')</if>
            <if test="goodsBrand != null and !goodsBrand.isEmpty()">AND UPPER(GOODS_BRAND) IN <foreach item="brand" collection="goodsBrand" open="(" separator="," close=")">UPPER(#{brand})</foreach></if>
            <if test="priceRange != null and priceRange != ''">
                <choose>
                    <when test='priceRange == "0-50"'>AND GOODS_PRICE &lt; 500000</when>
                    <when test='priceRange == "50-100"'>AND GOODS_PRICE BETWEEN 500000 AND 1000000</when>
                    <when test='priceRange == "100-"'>AND GOODS_PRICE &gt;= 1000000</when>
                </choose>
            </if>
            <if test="goodsPurpose != null and !goodsPurpose.isEmpty()">AND UPPER(GOODS_PURPOSE) IN <foreach item="purpose" collection="goodsPurpose" open="(" separator="," close=")">UPPER(#{purpose})</foreach></if>
            <if test="minScreenSize != null">AND GOODS_SCREEN_SIZE >= #{minScreenSize}</if>
            <if test="maxScreenSize != null">AND GOODS_SCREEN_SIZE &lt;= #{maxScreenSize}</if>
            <if test="minWeight != null">AND GOODS_WEIGHT >= #{minWeight}</if>
            <if test="maxWeight != null">AND GOODS_WEIGHT &lt;= #{maxWeight}</if>
        </where>
    </sql>

    <select id="allSelect" parameterType="mini.command.GoodsFilterCommand" resultMap="goodsResultMap">
        SELECT * FROM ( SELECT ROWNUM AS RN, <include refid="goodsColumns" /> FROM ( SELECT <include refid="goodsColumns" /> FROM GOODS <include refid="filterConditions"/> ORDER BY GOODS_NUM DESC ) ) WHERE RN BETWEEN #{startRow} AND #{endRow}
    </select>
    
    <select id="goodsCount" parameterType="mini.command.GoodsFilterCommand" resultType="int">
        SELECT COUNT(*) FROM GOODS <include refid="filterConditions"/>
    </select>
    
    <select id="selectOne" parameterType="string" resultMap="goodsResultMap">
        SELECT <include refid="goodsColumns" /> FROM GOODS WHERE GOODS_NUM = #{goodsNum}
    </select>
    
    <select id="selectOneWithStock" parameterType="string" resultMap="goodsStockResultMap">
        SELECT 
            G.*, COALESCE(S.STOCK, 0) AS STOCK_QTY
        FROM GOODS G
        LEFT OUTER JOIN (
            SELECT 
                IP.GOODS_NUM, 
                COALESCE(IQTY, 0) - COALESCE(PQTY, 0) AS STOCK
            FROM (SELECT GOODS_NUM, SUM(IPGO_QTY) AS IQTY FROM GOODS_IPGO GROUP BY GOODS_NUM) IP
            LEFT OUTER JOIN (SELECT GOODS_NUM, SUM(PURCHASE_QTY) AS PQTY FROM PURCHASE_LIST GROUP BY GOODS_NUM) PL
            ON IP.GOODS_NUM = PL.GOODS_NUM
        ) S
        ON G.GOODS_NUM = S.GOODS_NUM
        WHERE G.GOODS_NUM = #{goodsNum}
    </select>   
    
    <insert id="goodsInsert" parameterType="mini.domain.GoodsDTO">
        INSERT INTO GOODS (<include refid="goodsColumns" />) VALUES (#{goodsNum}, #{goodsName}, #{goodsPrice}, #{goodsContents}, #{goodsBrand}, #{goodsPurpose}, #{goodsScreenSize}, #{goodsWeight}, #{goodsKeyword1}, #{goodsKeyword2}, #{goodsKeyword3}, #{goodsShippingInfo}, #{goodsSellerInfo}, #{empNum}, SYSDATE, #{goodsMainImage, jdbcType=VARCHAR}, #{goodsMainStoreImage, jdbcType=VARCHAR}, #{goodsDetailImage, jdbcType=VARCHAR}, #{goodsDetailStoreImage, jdbcType=VARCHAR}, #{goodsDetail, jdbcType=VARCHAR}, #{goodsDetailStore, jdbcType=VARCHAR}, #{updateEmpNum, jdbcType=VARCHAR}, #{updateDate, jdbcType=TIMESTAMP})
    </insert>
    
    <update id="goodsUpdate" parameterType="mini.domain.GoodsDTO">
        UPDATE GOODS SET GOODS_NAME = #{goodsName}, GOODS_PRICE = #{goodsPrice}, GOODS_CONTENTS = #{goodsContents}, GOODS_BRAND = #{goodsBrand}, GOODS_PURPOSE = #{goodsPurpose}, GOODS_SCREEN_SIZE = #{goodsScreenSize}, GOODS_WEIGHT = #{goodsWeight}, GOODS_KEYWORD1 = #{goodsKeyword1}, GOODS_KEYWORD2 = #{goodsKeyword2}, GOODS_KEYWORD3 = #{goodsKeyword3}, GOODS_SHIPPING_INFO = #{goodsShippingInfo}, GOODS_SELLER_INFO = #{goodsSellerInfo}, GOODS_MAIN_IMAGE = #{goodsMainImage, jdbcType=VARCHAR}, GOODS_MAIN_STORE_IMAGE = #{goodsMainStoreImage, jdbcType=VARCHAR}, GOODS_DETAIL_IMAGE = #{goodsDetailImage, jdbcType=VARCHAR}, GOODS_DETAIL_STORE_IMAGE = #{goodsDetailStoreImage, jdbcType=VARCHAR}, GOODS_DETAIL = #{goodsDetail, jdbcType=VARCHAR}, GOODS_DETAIL_STORE = #{goodsDetailStore, jdbcType=VARCHAR}, UPDATE_EMP_NUM = #{updateEmpNum, jdbcType=VARCHAR}, UPDATE_DATE = SYSDATE WHERE GOODS_NUM = #{goodsNum}
    </update>
    
<delete id="goodsDelete" parameterType="java.util.List">
    DELETE FROM GOODS
    WHERE GOODS_NUM IN
    <foreach item="num" collection="list" open="(" separator="," close=")">
        #{num}
    </foreach>
</delete>

<select id="selectGoodsByNumList" parameterType="java.util.List" resultType="mini.domain.GoodsDTO">
    SELECT
        GOODS_MAIN_STORE_IMAGE,
        GOODS_DETAIL_STORE_IMAGE,
        GOODS_DETAIL_STORE
    FROM GOODS
    WHERE GOODS_NUM IN
    <foreach item="num" collection="list" open="(" separator="," close=")">
        #{num}
    </foreach>
</select>
  
<insert id="insertGoodsIpgo">
    INSERT INTO GOODS_IPGO (GOODS_NUM, IPGO_QTY, IPGO_DATE)
    VALUES (#{goodsNum}, #{ipgoQty}, SYSDATE)
</insert> 
    
</mapper>